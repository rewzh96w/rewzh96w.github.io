<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QRJDC</title>
      <link href="/blog/QRJDC/"/>
      <url>/blog/QRJDC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><h2 id="1、拉取qrjdc镜像"><a href="#1、拉取qrjdc镜像" class="headerlink" title="1、拉取qrjdc镜像"></a>1、拉取qrjdc镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull grbhq/qrjdc:latest</span><br></pre></td></tr></table></figure><h2 id="2、运行容器"><a href="#2、运行容器" class="headerlink" title="2、运行容器"></a>2、运行容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit --name qrjdc -p 5100:5100 -v $PWD/qrjdc/config:/qrjdc/config --restart unless-stopped grbhq/qrjdc:latest</span><br></pre></td></tr></table></figure><blockquote><p>映射端口可修改，默认端口号5100</p></blockquote><h2 id="3、端口访问"><a href="#3、端口访问" class="headerlink" title="3、端口访问"></a>3、端口访问</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP:5100</span><br></pre></td></tr></table></figure><h2 id="4、对接青龙面板"><a href="#4、对接青龙面板" class="headerlink" title="4、对接青龙面板"></a>4、对接青龙面板</h2><p>打开目录下config.json文件<br>/root/qrjdc/config/config.json<br>下面是个样例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Main&quot;: &#123;</span><br><span class="line">    &quot;Title&quot;: &quot;我是标题&quot;, //标题名字</span><br><span class="line">    &quot;Mode&quot;: &quot;RES&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;QL&quot;: &#123;</span><br><span class="line">    &quot;Open&quot;: 0,</span><br><span class="line">    &quot;Client_ID&quot;: &quot;&quot;, //青龙ID</span><br><span class="line">    &quot;Client_Secret&quot;: &quot;&quot;, //青龙Secret</span><br><span class="line">    &quot;URL&quot;: &quot;1.2.3:5700&quot;  //青龙面板地址</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;Notice&quot;: &quot;绑定成功&quot; //扫码登录后出现的字</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、更新"><a href="#二、更新" class="headerlink" title="二、更新"></a>二、更新</h1><h2 id="1、强制删除qrjdc容器"><a href="#1、强制删除qrjdc容器" class="headerlink" title="1、强制删除qrjdc容器"></a>1、强制删除qrjdc容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f qrjdc</span><br></pre></td></tr></table></figure><h2 id="2、重新拉取qrjdc镜像"><a href="#2、重新拉取qrjdc镜像" class="headerlink" title="2、重新拉取qrjdc镜像"></a>2、重新拉取qrjdc镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull grbhq/qrjdc:latest</span><br></pre></td></tr></table></figure><h2 id="3、重新运行容器"><a href="#3、重新运行容器" class="headerlink" title="3、重新运行容器"></a>3、重新运行容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit --name qrjdc -p 5100:5100 -v $PWD/qrjdc/config:/qrjdc/config --restart unless-stopped grbhq/qrjdc:latest</span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><blockquote><p>使用过程中出现任何问题，请及时检查容器运行日志</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f qrjdc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青龙Tools</title>
      <link href="/blog/%E9%9D%92%E9%BE%99Tools/"/>
      <url>/blog/%E9%9D%92%E9%BE%99Tools/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="1、创建QLTools目录并进入"><a href="#1、创建QLTools目录并进入" class="headerlink" title="1、创建QLTools目录并进入"></a>1、创建QLTools目录并进入</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir qltools &amp;&amp; cd qltools</span><br></pre></td></tr></table></figure><h2 id="2、Docker版本提供架构：amd64、arm64、arm-7"><a href="#2、Docker版本提供架构：amd64、arm64、arm-7" class="headerlink" title="2、Docker版本提供架构：amd64、arm64、arm-7"></a>2、Docker版本提供架构：amd64、arm64、arm-7</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always -itd --name QLTools -v $PWD/config:/QLTools/config -v $PWD/plugin:/QLTools/plugin -p 15000:15000 nuanxinqing123/qltools:latest</span><br></pre></td></tr></table></figure><blockquote><h2 id="IP-15000-访问即可"><a href="#IP-15000-访问即可" class="headerlink" title="IP:15000 访问即可"></a>IP:15000 访问即可</h2></blockquote><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="1、删除容器"><a href="#1、删除容器" class="headerlink" title="1、删除容器"></a>1、删除容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f QLTools</span><br></pre></td></tr></table></figure><h2 id="2、重新拉取镜像"><a href="#2、重新拉取镜像" class="headerlink" title="2、重新拉取镜像"></a>2、重新拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nuanxinqing123/qltools:latest</span><br></pre></td></tr></table></figure><h2 id="3、启动容器"><a href="#3、启动容器" class="headerlink" title="3、启动容器"></a>3、启动容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always -itd --name QLTools -v $PWD/config:/QLTools/config -v $PWD/plugin:/QLTools/plugin -p 15000:15000 nuanxinqing123/qltools:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ninja</title>
      <link href="/blog/Ninja/"/>
      <url>/blog/Ninja/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><h2 id="1-下载文件"><a href="#1-下载文件" class="headerlink" title="1.下载文件"></a>1.下载文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><blockquote><p>可能下载不了。解决方法：</p><p>1.下载文件docker-compose.7z </p><p>2.解压出来后有个docker-compose文件 </p><p>3.上传到服务器usr/local/bin文件夹内</p></blockquote><h2 id="2-授权"><a href="#2-授权" class="headerlink" title="2.授权"></a>2.授权</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><blockquote><p>在ql文件夹创建ninja文件夹,再在ninja文件夹创建 <code>docker-compose.yml</code> 文件，复制下列内容进去并保存</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  qinglong:</span><br><span class="line">    image: whyour/qinglong:latest</span><br><span class="line">    container_name: qinglong</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    tty: true</span><br><span class="line">    ports:</span><br><span class="line">      - 5700:5700</span><br><span class="line">      - 5701:5701</span><br><span class="line">    environment:</span><br><span class="line">      - ENABLE_HANGUP=true</span><br><span class="line">      - ENABLE_WEB_PANEL=true</span><br><span class="line">    volumes:</span><br><span class="line">      - ./config:/ql/config</span><br><span class="line">      - ./log:/ql/log</span><br><span class="line">      - ./db:/ql/db</span><br><span class="line">      - ./repo:/ql/repo</span><br><span class="line">      - ./raw:/ql/raw</span><br><span class="line">      - ./scripts:/ql/scripts</span><br><span class="line">      - ./jbot:/ql/jbot</span><br><span class="line">      - ./ninja:/ql/ninja</span><br><span class="line">    labels:</span><br><span class="line">      - com.centurylinklabs.watchtower.enable=false</span><br></pre></td></tr></table></figure><h1 id="安装Ninja"><a href="#安装Ninja" class="headerlink" title="安装Ninja"></a>安装Ninja</h1><h2 id="1-进入文件夹"><a href="#1-进入文件夹" class="headerlink" title="1.进入文件夹"></a>1.进入文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root/ql/ninja</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>然后浏览器打开青龙保持登录状态</p></blockquote><h2 id="2-进入容器"><a href="#2-进入容器" class="headerlink" title="2.进入容器"></a>2.进入容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><h2 id="3-执行以下命令"><a href="#3-执行以下命令" class="headerlink" title="3.执行以下命令"></a>3.执行以下命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://ghproxy.com/https://github.com/shufflewzc/Waikiki_ninja.git /ql/ninja</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /ql/ninja/backend</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start</span><br></pre></td></tr></table></figure><blockquote><p>打开青龙configs文件夹的extra.sh文件，将以下内容粘贴进去。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /ql/ninja/backend</span><br><span class="line">pm2 start</span><br></pre></td></tr></table></figure><h1 id="自定义UA"><a href="#自定义UA" class="headerlink" title="自定义UA"></a>自定义UA</h1><h2 id="1-进入容器"><a href="#1-进入容器" class="headerlink" title="1.进入容器"></a>1.进入容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /ql/ninja/backend</span><br></pre></td></tr></table></figure><blockquote><p>然后在文件管理器找到.env文件，按需要修改</p></blockquote><h2 id="2-修改生成"><a href="#2-修改生成" class="headerlink" title="2.修改生成"></a>2.修改生成</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start</span><br></pre></td></tr></table></figure><h1 id="更新方法"><a href="#更新方法" class="headerlink" title="更新方法"></a>更新方法</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /ql/ninja/backend</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>重启后务必执行一次 <code>ql extra</code> 保证 Ninja 配置成功。</li><li>更新 Ninja 只需要在容器中 <code>ninja/backend</code> 目录执行 <code>git pull</code> 然后 <code>pm2 start</code></li><li>Qinglong 需要在登录状态（<code>auth.json</code> 中有 token）</li></ul><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><strong>常见问题</strong></h1><p>Q：为什么我 <code>git pull</code> 失败？A：一般是修改过文件，先运行一次 <code>git checkout .</code> 再 <code>git pull</code>。还是不行就删了重拉。</p><p>Q：为什么访问不了？A：一般为端口映射错误/失败，请自行检查配置文件。</p><p>Q：为什么访问白屏？A：使用现代的浏览器，而不是古代的。</p>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Saobing-pro</title>
      <link href="/blog/Saobing-pro/"/>
      <url>/blog/Saobing-pro/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="直接创建容器"><a href="#直接创建容器" class="headerlink" title="直接创建容器"></a>直接创建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name saobingpro -p 6705:5099 -d -v saobingpro-db:/app/db --restart unless-stopped saobing/saobingpro:latest</span><br></pre></td></tr></table></figure><blockquote><p>ip:6705    即可访问</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MaiARK</title>
      <link href="/blog/MaiARK/"/>
      <url>/blog/MaiARK/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><h1 id="直接执行下面命令，按着提示进行"><a href="#直接执行下面命令，按着提示进行" class="headerlink" title="直接执行下面命令，按着提示进行"></a>直接执行下面命令，按着提示进行</h1></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -S -L https://maiark-1256973477.cos.ap-shanghai.myqcloud.com/kiss.sh)</span><br></pre></td></tr></table></figure><blockquote><p>ip:8082 即可访问</p></blockquote><p>傻妞插件下载地址：</p><a class="btn-beautify " href="/%E9%93%BE%E6%8E%A5:%20https:/pan.baidu.com/s/11W3baH9ZpVUFUJikvVT4Jg?pwd=1234"   title="百度网盘"><i class="fa-solid fa-download"></i><span>百度网盘</span></a>  <a class="btn-beautify " href="https://www.123pan.com/s/rIUDVv-JftlA"   title="123云盘"><i class="fa-solid fa-cloud-download"></i><span>123云盘</span></a>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KingFeng</title>
      <link href="/blog/KingFeng/"/>
      <url>/blog/KingFeng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ranqi03/kingfeng:latest</span><br></pre></td></tr></table></figure><h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/kingfeng/:/app/config/ \</span><br><span class="line">   -p 5000:80 \</span><br><span class="line">   --name kingfeng \</span><br><span class="line">   --hostname kingfeng \</span><br><span class="line">   ranqi03/kingfeng:latest</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote><p>打开文件root/kengfing/config.yaml 填写修改参数</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Servers: </span><br><span class="line"><span class="meta">  #</span><span class="bash">显示的名称</span></span><br><span class="line">- QL_Name: 广西节点1 </span><br><span class="line"><span class="meta">  #</span><span class="bash">青龙</span></span><br><span class="line">  QL_URL: http://111.34.252.43:5700/</span><br><span class="line"><span class="meta">  #</span><span class="bash">OpenAPI Client_ID</span></span><br><span class="line">  QL_Client_ID: qHdM-2Kwmuir</span><br><span class="line"><span class="meta">  #</span><span class="bash">OpenAPI Client_Secret</span></span><br><span class="line">  QL_Client_Secret: 7e7-dAX3-_y6VAgF4e-GSGCr</span><br><span class="line"><span class="meta">  #</span><span class="bash">最大添加ck容量 当前有的ck按照名称来统计 只要名称为JD_WSCK或者JD_COOKIE就会计数</span></span><br><span class="line">  MaxCount: 100 </span><br><span class="line">- QL_Name: （选择上面的）</span><br><span class="line">  QL_URL: http://111.34.252.43:5700/</span><br><span class="line">  QL_Client_ID: qHdM-2Kwmuir</span><br><span class="line">  QL_Client_Secret: 7e7-dAX3-_y6VAgF4e-GSGCr</span><br><span class="line">  MaxCount: 100</span><br><span class="line"><span class="meta">#</span><span class="bash">管理员密钥 会自动生成 修改规则为必须包涵大小写字母+数字</span></span><br><span class="line">SecretKey: Hcw022703 </span><br><span class="line"><span class="meta">#</span><span class="bash">wskey转换任务名</span></span><br><span class="line">WsKeyTaskFullName: wskey转换 </span><br><span class="line"><span class="meta">#</span><span class="bash">用户自定义公告内容 支持html语法</span></span><br><span class="line">Notice: 为了您的账号安全，请关闭免密支付！</span><br><span class="line"><span class="meta">#</span><span class="bash">管理员名称</span> </span><br><span class="line">UserName: ninini</span><br><span class="line"><span class="meta">#</span><span class="bash">推送图片</span></span><br><span class="line">PushImageUrl: https://img2.baidu.com/it/u=1007188585,453085648&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg </span><br></pre></td></tr></table></figure><blockquote><p>ip:5000   即可访问</p></blockquote><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker kill kingfeng &amp;&amp; docker rm kingfeng &amp;&amp; docker rmi ranqi03/kingfeng</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ranqi03/kingfeng:latest</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/kingfeng/:/app/config/ \</span><br><span class="line">   -p 5000:80 \</span><br><span class="line">   --name kingfeng \</span><br><span class="line">   --hostname kingfeng \</span><br><span class="line">   ranqi03/kingfeng:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sillyGirl</title>
      <link href="/blog/sillyGirl/"/>
      <url>/blog/sillyGirl/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>该教程参考：<a href="https://muziii.com/180.html">https://muziii.com/180.html</a>  如需要更加详细的教程请前往查看</p></blockquote><h1 id="基础环境构建"><a href="#基础环境构建" class="headerlink" title="基础环境构建"></a>基础环境构建</h1><h2 id="go安装"><a href="#go安装" class="headerlink" title="go安装"></a>go安装</h2><h3 id="下载go安装包-，这里我们安装到usr-local目录"><a href="#下载go安装包-，这里我们安装到usr-local目录" class="headerlink" title="下载go安装包 ，这里我们安装到usr/local目录"></a>下载go安装包 ，这里我们安装到usr/local目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local &amp;&amp; wget https://golang.google.cn/dl/go1.16.7.linux-amd64.tar.gz -O go1.16.7.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf go1.16.7.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><div class="note warning modern"><p>去文件/etc/profile里面复制以下代码到最后一行，并保存</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https://goproxy.cn</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/usr/local/go/path</span><br><span class="line">export PATH=$PATH:$GOROOT/bin:$GOPATH/bin</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>修改文件完成后执行</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="查看go安装是否完成"><a href="#查看go安装是否完成" class="headerlink" title="查看go安装是否完成"></a>查看go安装是否完成</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>有下列显示表明go环境安装成功</p></div><p><img src="https://s3.bmp.ovh/imgs/2022/07/05/d8d2d23d82673637.png" alt=""></p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><div class="note warning modern"><p>下面3个命令挨个跑完就好了</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h2 id="安装wget-unzip-gcc-gcc-c"><a href="#安装wget-unzip-gcc-gcc-c" class="headerlink" title="安装wget unzip gcc gcc-c++"></a>安装wget unzip gcc gcc-c++</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget unzip gcc gcc-c++ screen -y</span><br></pre></td></tr></table></figure><h2 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install screen</span><br></pre></td></tr></table></figure><p>等命令运行完毕。  按Ctrl + c 退出</p><h1 id="傻妞安装"><a href="#傻妞安装" class="headerlink" title="傻妞安装"></a>傻妞安装</h1><p>一键安装傻妞(老用户先执行 delete silly compiled_at，菜🐔请直接删了原有傻妞)</p><h2 id="一键安装命令"><a href="#一键安装命令" class="headerlink" title="一键安装命令"></a>一键安装命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=sillyGirl;a=arm64;if [[ $(uname -a | grep &quot;x86_64&quot;) != &quot;&quot; ]];then a=amd64;fi ;if [ ! -d $s ];then mkdir $s;fi ;cd $s;wget https://yanyu.ltd/https://github.com/cdle/$&#123;s&#125;/releases/download/main/$&#123;s&#125;_linux_$a -O $s &amp;&amp; chmod 777 $s;pkill -9 $s;$(pwd)/$s</span><br></pre></td></tr></table></figure><p>等命令运行完毕。按ctrl + c 退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="开始部署QQ机器人必备环境"><a href="#开始部署QQ机器人必备环境" class="headerlink" title="开始部署QQ机器人必备环境"></a>开始部署QQ机器人必备环境</h1><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><h3 id="进入Linux自定义目录下，通过-wget-命令获取-Node-js-安装程序比如我们安装在-usr-local目录，执行如下命令："><a href="#进入Linux自定义目录下，通过-wget-命令获取-Node-js-安装程序比如我们安装在-usr-local目录，执行如下命令：" class="headerlink" title="进入Linux自定义目录下，通过 wget 命令获取 Node.js 安装程序比如我们安装在 usr/local目录，执行如下命令："></a>进入Linux自定义目录下，通过 wget 命令获取 Node.js 安装程序比如我们安装在 usr/local目录，执行如下命令：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local  &amp;&amp; wget https://nodejs.org/dist/v14.17.5/node-v14.17.5-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><h3 id="Node-js-解压下载得到的-Node-js-是-tar-xz-格式，需要使用解压命令首先对其进行解压"><a href="#Node-js-解压下载得到的-Node-js-是-tar-xz-格式，需要使用解压命令首先对其进行解压" class="headerlink" title="Node.js 解压下载得到的 Node.js 是 *.tar.xz 格式，需要使用解压命令首先对其进行解压"></a>Node.js 解压下载得到的 Node.js 是 <em>*</em>.tar.xz 格式，需要使用解压命令首先对其进行解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xz -dk node-v14.17.5-linux-x64.tar.xz  &amp;&amp; tar -xvf node-v14.17.5-linux-x64.tar</span><br></pre></td></tr></table></figure><h3 id="Node-js-环境配置"><a href="#Node-js-环境配置" class="headerlink" title="Node.js 环境配置"></a>Node.js 环境配置</h3><blockquote><p>进入配置文件/etc/profile  在文件的最后面新行添加以下三行代码</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/usr/local/node-v14.17.5-linux-x64</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin</span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure><h3 id="生效配置文件"><a href="#生效配置文件" class="headerlink" title="生效配置文件"></a>生效配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><p>查看node版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>查询结果 <strong>V14.17.5</strong></p><h3 id="查看nmp版本"><a href="#查看nmp版本" class="headerlink" title="查看nmp版本"></a>查看nmp版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>查询结果 <strong>V6.14.14</strong></p><blockquote><p>到此安装好了 <strong>node.js</strong></p></blockquote><h2 id="pm2"><a href="#pm2" class="headerlink" title="pm2"></a>pm2</h2><blockquote><p>不然后第后面没法守护进程<br>由于我们已经安装好了node.js所以直接用下面命令安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><p>执行 <code>pm2 -v</code> 查看是否安装成功</p><h2 id="设置管理员"><a href="#设置管理员" class="headerlink" title="设置管理员"></a>设置管理员</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=/etc/sillyGirl;if [ ! -d $s ];then mkdir $s; fi; echo &quot;set qq masters 你的管理QQ号&quot; &gt; /etc/sillyGirl/sets.conf</span><br></pre></td></tr></table></figure><h2 id="node-noebot接入傻妞"><a href="#node-noebot接入傻妞" class="headerlink" title="node-noebot接入傻妞"></a>node-noebot接入傻妞</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~ &amp;&amp; git clone https://ghproxy.com/https://github.com/takayama-lily/node-onebot.git</span><br></pre></td></tr></table></figure><blockquote><p>修改文件</p></blockquote><p>手动去文件夹/root/node-onebot 到config.sample.js<br>先把config.sample.js改成config.js</p><h1 id="傻妞启动"><a href="#傻妞启动" class="headerlink" title="傻妞启动"></a>傻妞启动</h1><h3 id="启动傻妞"><a href="#启动傻妞" class="headerlink" title="启动傻妞"></a>启动傻妞</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd sillyGirl &amp;&amp; ./sillyGirl -t</span><br></pre></td></tr></table></figure><p>等待数据库加载完成，按下Ctrl   +  C 退出 然后执行下面命令 静默挂机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sillyGirl -d</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd node-onebot &amp;&amp; node main</span><br></pre></td></tr></table></figure><p>第一次登录，一定使用密码登陆，稳定性高点</p><p>本方法参考：<a href="https://blog.csdn.net/m0_51607907/article/details/123876503?spm=1001.2014.3001.5502">https://blog.csdn.net/m0_51607907/article/details/123876503?spm=1001.2014.3001.5502</a></p><p>按键盘 Ctrl+c保存退出</p><div class="note warning modern"><p>如果选择扫码，有可能需要用到<a href="https://blog.csdn.net/m0_51607907/article/details/124244034?utm_source=app&amp;app_version=5.3.0&amp;code=app_1562916241&amp;uLinkId=usr1mkqgl919blen">《滑块验证获取ticket教程》</a></p><p>扫码后可能如果出现登录环境异常，请看<a href="https://blog.csdn.net/m0_51607907/article/details/124434989?utm_source=app&amp;app_version=5.3.1&amp;code=app_1562916241&amp;uLinkId=usr1mkqgl919blen">《解决扫码登录异常问题》</a></p><p>遇到反向链接失败请看<a href="https://blog.csdn.net/m0_51607907/article/details/124480592?utm_source=app&amp;app_version=5.3.1&amp;code=app_1562916241&amp;uLinkId=usr1mkqgl919blen">解决《傻妞反向ws连接(ws://127.0.0.1:8080/qq/receive)被关闭，关闭码1006 ，将在3000毫秒后尝试连接》</a></p><p>版权声明：本文为CSDN博主「MIKE笔记」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_51607907/article/details/123876503">https://blog.csdn.net/m0_51607907/article/details/123876503</a></p></div><h3 id="创建scree会话"><a href="#创建scree会话" class="headerlink" title="创建scree会话"></a>创建scree会话</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S node-onebot</span><br></pre></td></tr></table></figure><h3 id="再运行noebot"><a href="#再运行noebot" class="headerlink" title="再运行noebot"></a>再运行noebot</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd node-onebot &amp;&amp; node main</span><br></pre></td></tr></table></figure><p>然后直接用按键的Ctrl+a+d退出会话就行！</p><h3 id="pm2模式运行守护"><a href="#pm2模式运行守护" class="headerlink" title="pm2模式运行守护"></a>pm2模式运行守护</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start &quot;node main 机器人QQ号&quot;</span><br></pre></td></tr></table></figure><h1 id="傻妞重启"><a href="#傻妞重启" class="headerlink" title="傻妞重启"></a>傻妞重启</h1><h3 id="显示进程号"><a href="#显示进程号" class="headerlink" title="显示进程号"></a>显示进程号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -A|grep sillyGirl</span><br></pre></td></tr></table></figure><blockquote><p>没有进程的话就不用杀掉进程了</p></blockquote><h3 id="杀掉进程"><a href="#杀掉进程" class="headerlink" title="杀掉进程"></a>杀掉进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 xxxxxx</span><br></pre></td></tr></table></figure><h3 id="启动傻妞-1"><a href="#启动傻妞-1" class="headerlink" title="启动傻妞"></a>启动傻妞</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd sillyGirl &amp;&amp; ./sillyGirl -t</span><br></pre></td></tr></table></figure><p>等待数据库加载完成，按下Ctrl 再按 C 退出 然后执行下面命令 静默挂机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sillyGirl -d</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd node-onebot &amp;&amp; node main</span><br></pre></td></tr></table></figure><p>按键盘 Ctrl+c保存退出</p><h3 id="创建scree会话-1"><a href="#创建scree会话-1" class="headerlink" title="创建scree会话"></a>创建scree会话</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S node-onebot</span><br></pre></td></tr></table></figure><h3 id="再运行noebot-1"><a href="#再运行noebot-1" class="headerlink" title="再运行noebot"></a>再运行noebot</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &amp;&amp; cd node-onebot &amp;&amp; node main</span><br></pre></td></tr></table></figure><p>然后直接用按键的Ctrl+a+d退出会话就行！</p><h3 id="pm2模式运行守护-1"><a href="#pm2模式运行守护-1" class="headerlink" title="pm2模式运行守护"></a>pm2模式运行守护</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start &quot;node main 机器人QQ号&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装及部分常用命令</title>
      <link href="/blog/docker%E5%AE%89%E8%A3%85%E5%8F%8A%E9%83%A8%E5%88%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/blog/docker%E5%AE%89%E8%A3%85%E5%8F%8A%E9%83%A8%E5%88%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="方法一（推荐）"><a href="#方法一（推荐）" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h2><h3 id="数据检查更新"><a href="#数据检查更新" class="headerlink" title="数据检查更新"></a>数据检查更新</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum check-update</span><br></pre></td></tr></table></figure><h3 id="拉取镜像并安装"><a href="#拉取镜像并安装" class="headerlink" title="拉取镜像并安装"></a>拉取镜像并安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>如果这一步比较慢直接按 Ctrl + c 结束，然后用方法二安装</p></div><h2 id="方法二（在方法一比较慢的情况下使用）"><a href="#方法二（在方法一比较慢的情况下使用）" class="headerlink" title="方法二（在方法一比较慢的情况下使用）"></a>方法二（在方法一比较慢的情况下使用）</h2><div class="note warning modern"><p>在此期间尽量关闭其他没有用的软件，以免影响其数据信息</p></div><div class="note info modern"><p>过程中可能需要输入 y 并按回车确认</p></div><h3 id="数据检查更新-1"><a href="#数据检查更新-1" class="headerlink" title="数据检查更新"></a>数据检查更新</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker</span><br></pre></td></tr></table></figure><h2 id="服务设置"><a href="#服务设置" class="headerlink" title="服务设置"></a>服务设置</h2><h3 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="查看docker服务状态"><a href="#查看docker服务状态" class="headerlink" title="查看docker服务状态"></a>查看docker服务状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure><h3 id="docker服务开机自启"><a href="#docker服务开机自启" class="headerlink" title="docker服务开机自启"></a>docker服务开机自启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="部分常用命令"><a href="#部分常用命令" class="headerlink" title="部分常用命令"></a>部分常用命令</h2><h3 id="查看运行中的容器列表"><a href="#查看运行中的容器列表" class="headerlink" title="查看运行中的容器列表"></a>查看运行中的容器列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h3 id="查看全部容器列表"><a href="#查看全部容器列表" class="headerlink" title="查看全部容器列表"></a>查看全部容器列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><div class="note warning modern"><p>这里的id是查看容器列表前的数字字母（或者直接是容器名）</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f id</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青龙面板安装</title>
      <link href="/blog/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85/"/>
      <url>/blog/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>镜像地址：<a href="https://hub.docker.com/r/whyour/qinglong">https://hub.docker.com/r/whyour/qinglong</a></p><div class="note danger modern"><p>创建容器前首先得安装 docker ,没有安装的请看，安装了的请忽略。</p></div><h2 id="1、拉取镜像创建容器"><a href="#1、拉取镜像创建容器" class="headerlink" title="1、拉取镜像创建容器"></a>1、拉取镜像创建容器</h2><div class="note warning modern"><p>因为部分版本可能出现白屏，所以这里使用的是2.11.3版本，如果想使用其他版本更改后面的2.11.3为其他版本号即可，最新的话就改为latest</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/ql/config:/ql/config \</span><br><span class="line">   -v $PWD/ql/log:/ql/log \</span><br><span class="line">   -v $PWD/ql/db:/ql/db \</span><br><span class="line">   -v $PWD/ql/scripts:/ql/scripts \</span><br><span class="line">   -v $PWD/ql/jbot:/ql/jbot \</span><br><span class="line">   -p 5700:5700 \</span><br><span class="line">   --name qinglong \</span><br><span class="line">   --hostname qinglong \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:2.11.3</span><br></pre></td></tr></table></figure><div class="note info modern"><p>完成后浏览器打开   IP:5700   (端口)，提示错误等待2分钟再刷新即可 打不开尝试查看端口是否打开</p></div><h2 id="2、多容器创建"><a href="#2、多容器创建" class="headerlink" title="2、多容器创建"></a>2、多容器创建</h2><div class="note warning modern"><p>自定义：第一个5700是端口号，可随意更改，创建新容器时记得更改文件名和容器名，具体差异自己对比</p></div><h6 id="5800："><a href="#5800：" class="headerlink" title="5800："></a>5800：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/ql2/config:/ql/config \</span><br><span class="line">   -v $PWD/ql2/log:/ql/log \</span><br><span class="line">   -v $PWD/ql2/db:/ql/db \</span><br><span class="line">   -v $PWD/ql2/scripts:/ql/scripts \</span><br><span class="line">   -v $PWD/ql2/jbot:/ql/jbot \</span><br><span class="line">   -p 5800:5700 \</span><br><span class="line">   --name qinglong2 \</span><br><span class="line">   --hostname qinglong2 \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:2.11.3</span><br></pre></td></tr></table></figure><h6 id="5900："><a href="#5900：" class="headerlink" title="5900："></a>5900：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/ql3/config:/ql/config \</span><br><span class="line">   -v $PWD/ql3/log:/ql/log \</span><br><span class="line">   -v $PWD/ql3/db:/ql/db \</span><br><span class="line">   -v $PWD/ql3/scripts:/ql/scripts \</span><br><span class="line">   -v $PWD/ql3/jbot:/ql/jbot \</span><br><span class="line">   -p 5900:5700 \</span><br><span class="line">   --name qinglong3 \</span><br><span class="line">   --hostname qinglong3 \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:2.11.3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>油猴脚本的添加</title>
      <link href="/blog/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E7%9A%84%E6%B7%BB%E5%8A%A0/"/>
      <url>/blog/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E7%9A%84%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="油猴脚本管理器的添加"><a href="#油猴脚本管理器的添加" class="headerlink" title="油猴脚本管理器的添加"></a>油猴脚本管理器的添加</h1><blockquote><p>任何浏览器都可以在其扩展商店搜索Tampermonkey添加油猴脚本管理器</p><p>Edge打开网站：<a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd">https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd</a></p><p>Chrome打开网站：<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN">https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN</a></p></blockquote><div class="note success modern"><p>成功添加后就可以在浏览器上方扩展按钮处找到获取新的脚本了</p></div><blockquote><p>也可直接打开网站<a href="https://greasyfork.org/zh-CN">greasyfork</a>获取脚本</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网盘资源加速下载(IDM)</title>
      <link href="/blog/%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD-IDM/"/>
      <url>/blog/%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD-IDM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网盘资源加速下载（IDM）"><a href="#网盘资源加速下载（IDM）" class="headerlink" title="网盘资源加速下载（IDM）"></a>网盘资源加速下载（IDM）</h1><blockquote><p>本教程适用于百度、阿里、天翼、迅雷四大云盘直链下载</p></blockquote><div class="note info modern"><p>这里需使用到油猴脚本（tampermonkey），没有添加的请查阅《油猴脚本的添加》</p></div><h2 id="浏览器添加脚本"><a href="#浏览器添加脚本" class="headerlink" title="浏览器添加脚本"></a>浏览器添加脚本</h2><blockquote><p>直接打开网站：<a href="https://greasyfork.org/zh-CN/scripts/436446-%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B">https://greasyfork.org/zh-CN/scripts/436446-%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B</a></p></blockquote><div class="note success modern"><p>成功安装脚本后即可使用</p></div><h2 id="浏览器添加扩展"><a href="#浏览器添加扩展" class="headerlink" title="浏览器添加扩展"></a>浏览器添加扩展</h2><blockquote><p>Edge浏览器打开网站：<a href="https://microsoftedge.microsoft.com/addons/detail/idm-integration-module/llbjbkhnmlidjebalopleeepgdfgcpec">https://microsoftedge.microsoft.com/addons/detail/idm-integration-module/llbjbkhnmlidjebalopleeepgdfgcpec</a></p><p>Chrome浏览器打开网站：<a href="https://chrome.google.com/webstore/detail/internet-download-manager/lcdlanlaneooailnebnhamiiieebikid?hl=zh-CN">https://chrome.google.com/webstore/detail/internet-download-manager/lcdlanlaneooailnebnhamiiieebikid?hl=zh-CN</a></p></blockquote><div class="note info modern"><p>Chrome可能需要魔法上网才能打开，添加<a href="https://chrome.google.com/webstore/detail/igg%E8%B0%B7%E6%AD%8C%E5%AD%A6%E6%9C%AF%E5%8A%A9%E6%89%8B/ncldcbhpeplkfijdhnoepdgdnmjkckij">谷歌学术助手</a>就可以加载谷歌的网页了</p></div><h2 id="下载IDM下载器"><a href="#下载IDM下载器" class="headerlink" title="下载IDM下载器"></a>下载IDM下载器</h2><h3 id="IDM-v6-40-11-Repack"><a href="#IDM-v6-40-11-Repack" class="headerlink" title="IDM_v6.40.11_Repack"></a>IDM_v6.40.11_Repack</h3><blockquote><p>多线程下载器</p><p>官网地址：<a href="https://www.internetdownloadmanager.com/">https://macpaw.com/cleanmypc</a>（付费使用）</p></blockquote><div class="note success modern"><p>下载地址：<a class="btn-beautify " href="https://redh.lanzoub.com/isnpO02pbngd"   title="Download"><i class="fa-solid fa-download"></i><span>Download</span></a> 提取码：1234 （免费使用版）</p></div><h4 id="1-下载好后直接一路安装"><a href="#1-下载好后直接一路安装" class="headerlink" title="1.下载好后直接一路安装"></a>1.下载好后直接一路安装</h4><h4 id="2-然后打开IDM，在选项-常规设置中勾选你想要接管的浏览器"><a href="#2-然后打开IDM，在选项-常规设置中勾选你想要接管的浏览器" class="headerlink" title="2.然后打开IDM，在选项-常规设置中勾选你想要接管的浏览器"></a>2.然后打开IDM，在选项-常规设置中勾选你想要接管的浏览器</h4><h4 id="3-用该浏览器打开想要下载的网盘资源"><a href="#3-用该浏览器打开想要下载的网盘资源" class="headerlink" title="3.用该浏览器打开想要下载的网盘资源"></a>3.用该浏览器打开想要下载的网盘资源</h4><h4 id="4-勾选需要下载的文件-点击下载助手-API下载-点击链接即可使用IDM加速下载"><a href="#4-勾选需要下载的文件-点击下载助手-API下载-点击链接即可使用IDM加速下载" class="headerlink" title="4.勾选需要下载的文件-点击下载助手-API下载-点击链接即可使用IDM加速下载"></a>4.勾选需要下载的文件-点击下载助手-API下载-点击链接即可使用IDM加速下载</h4><div class="note danger modern"><p>因为用的是破解版软件，会有软件弹窗警告，用火绒截图拦截弹窗就可以了，网页的弹网页关闭就行</p><p>下载不了文件记得在选项-文件类型后面添加下载文件的后缀名</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows本地搭建hexo</title>
      <link href="/blog/windows%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhexo/"/>
      <url>/blog/windows%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="windows本地搭建hexo"><a href="#windows本地搭建hexo" class="headerlink" title="windows本地搭建hexo"></a>windows本地搭建hexo</h1><blockquote><p>本教程参考<a href="https://guguge.top/"> 咕咕鸽</a>，里面会有更加详细的教程,抖音搜索guguge也会有视频讲解哦！</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="软件下载及环境配置"><a href="#软件下载及环境配置" class="headerlink" title="软件下载及环境配置"></a>软件下载及环境配置</h4><p>1.Git</p><p>打开Git官网：<a href="https://git-scm.com/" title="https://git-scm.com/">https://git-scm.com/</a></p><p>右边Download for Windows按钮——&gt;64-bit Git for Windows Setup按钮</p><p>2.Node.js</p><p>打开Node.js中文网：<a href="http://nodejs.cn/">http://nodejs.cn/</a></p><p>3.蓝奏云(包含Git和Node.js)：</p><a class="btn-beautify " href="https://redh.lanzoub.com/ioWXF04v82of"   title="Hexo环境下载"><i class="fas fa-download"></i><span>Hexo环境下载</span></a>  <a class="btn-beautify " href="https://redh.lanzoub.com/iEiDB04v8twf"   title="VSCode下载"><i class="fas fa-download"></i><span>VSCode下载</span></a><div class="note info modern"><p>如果有文本编辑器可以不用下载VSCode</p></div><p>4.安装Git和Node.js（一路默认安装）</p><p>5.解压蓝奏云下载好的 Hexo环境.zip 文件</p><h4 id="检验环境"><a href="#检验环境" class="headerlink" title="检验环境"></a>检验环境</h4><p>1.Win + R 输入cmd</p><p>2.输入node -v     回车</p><p>3.输入npm -v 回车</p><p>4.输入git —version 回车</p><div class="note success modern"><p>如果有版本号输出表示安装成功</p></div><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>打开解压好的 Hexo环境文件夹</p><h4 id="Hexo-cli-安装"><a href="#Hexo-cli-安装" class="headerlink" title="Hexo-cli 安装"></a>Hexo-cli 安装</h4><div class="note success modern"><p>第一次—-打开4.安装hexo-cli.bat文件。</p></div><div class="note warning modern"><p>建议选择第2、3种安装方式（速度快点）</p></div><div class="note success modern"><p>第二次—-打开4.安装hexo-cli.bat文件，验证是否安装成功。</p></div><h4 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h4><div class="note success modern"><p>网站源码模板(Hexo-butterfly-demo)：</p></div><p>Gitee：</p><pre><code>https://gitee.com/guguge/Hexo-butterfly-demo.git</code></pre><div class="note success modern"><p>打开6.下载源码.bat文件，复制上面链接，在窗口内按鼠标右键直接粘贴进去，直接回车就能下载。</p></div><div class="note warning modern"><p>这时会生成一个Hexo-butterfly-demo文件夹</p></div><h4 id="安装必备插件"><a href="#安装必备插件" class="headerlink" title="安装必备插件"></a>安装必备插件</h4><div class="note success modern"><p>打开Hexo-butterfly-demo文件夹再打开运行脚本.bat文件</p></div><div class="note warning modern"><p>输入 1 并回车安装方式建议使用 cnpm或者yarn,下载速度较快一点</p></div><h3 id="检验安装成果"><a href="#检验安装成果" class="headerlink" title="检验安装成果"></a>检验安装成果</h3><p>再次打开运行脚本.bat</p><div class="note success modern"><p>输入 2 并回车，等待一下就能在浏览器中查看到页面了。</p></div><p>如果显示异常，重新执行一下安装插件命令即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试页面</title>
      <link href="/blog/done/"/>
      <url>/blog/done/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><p>如果你看到此页面，说明你已成功运行并部署此网站。</p><p><img src="1.jpg" alt=""></p><p>你可以查看，以下文档进行自定义设置。</p><blockquote><p>网站修改配置文档：</p></blockquote><a class="btn-beautify " href="https://guguge.gitee.io/blog/butterfly"   title="链接1"><i class="fas fa-download"></i><span>链接1</span></a><a class="btn-beautify " href="https://guguge.top/blog/butterfly"   title="链接2"><i class="fas fa-download"></i><span>链接2</span></a><hr><blockquote><p>文章书写格式参考文档：</p></blockquote><a class="btn-beautify " href="https://guguge.gitee.io/blog/markdown"   title="链接1"><i class="fas fa-download"></i><span>链接1</span></a><a class="btn-beautify " href="https://guguge.top/blog/markdown"   title="链接2"><i class="fas fa-download"></i><span>链接2</span></a>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
